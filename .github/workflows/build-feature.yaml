name: build and test feature branch
on:
  pull_request:
    branches: [ develop ]
    types: [ opened, reopened ]
jobs: 
  #########################################################
  # Build feature branch
  #########################################################
  build-feature:
    runs-on: ubuntu-latest
    steps:
      - name: pull and checkout from git repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: setup java 17 
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: build with maven
        run: |
          mvn clean test package
          echo "build with maven"

  #########################################################
  # Automatic merge to develop branch
  #########################################################
  merge-feature-into-develop:
    runs-on: ubuntu-latest
    needs: build-feature
    if: ${{ success() }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      #########################################################
      # 1- Download source code
      # Only a single commit is fetched by default, for the ref/SHA that triggered the workflow, set fetch-depth: 0 to fetch all history for all branches
      - name: "checkout source code"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}
          fetch-depth: 0

      #########################################################
      # 2- Merge to develop
      #########################################################
      - name: "merge to develop branch"
        if: ${{ success()}}
        run: |
          git config --global user.email "EMAIL-OF-WORKFLOW@USER"
          git config --global user.name "WORKFLOW-USER"
          # Using -m "message" on merge command ins mandatory here to avoid open a text editor to write a commit message
          git merge --no-ff --verbose origin/${{ github.event.pull_request.head.ref }} -m "Merge pull request #${{ github.event.pull_request.number }} from ${{ github.event.pull_request.head.ref }}"

      #########################################################
      # 3- Push changes after merge
      #########################################################
      - name: "push changes after merge"
        if: ${{ success() }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.base_ref }}
    